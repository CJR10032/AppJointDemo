// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    apply from: './version.gradle'
    ext {
        kotlin_version = '1.3.72'
    }

    repositories {
        mavenCentral()
        google()
        jcenter { url 'https://maven.aliyun.com/repository/jcenter' }
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath deps.android_gradle_plugin
        classpath deps.kotlin_gradle_plugin

        //  tinkersupport插件, 其中lastest.release指拉取最新版本，也可以指定明确版本号，例如1.0.4
        classpath "com.tencent.bugly:tinker-support:1.1.5"
        //  组件化框架的依赖
        classpath 'io.github.prototypez:app-joint:1.7'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter { url 'https://maven.aliyun.com/repository/jcenter' }
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//  子项目配置
subprojects { project ->
    afterEvaluate {
        if (project.hasProperty("android")) {
            android {
                //  编译版本配置
                compileSdkVersion versions.build.target_sdk

                defaultConfig {
                    minSdkVersion versions.build.min_version
                    targetSdkVersion versions.build.target_sdk
                    versionCode versions.build.version_code
                    versionName versions.build.version_name
                }

                lintOptions {
                    abortOnError true
                    disable 'GradleDependency'
                    disable 'InvalidPackage'
                    disable 'TypographyDashes'
                    disable 'TypographyFractions'
                    disable 'LabelFor'
                    disable 'IconLauncherShape'
                    disable 'IconMissingDensityFolder'
                }


                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }

                packagingOptions {
                    exclude 'META-INF/DEPENDENCIES.txt'
                    exclude 'META-INF/LICENSE.txt'
                    exclude 'META-INF/NOTICE.txt'
                    exclude 'META-INF/NOTICE'
                    exclude 'META-INF/LICENSE'
                    exclude 'META-INF/DEPENDENCIES'
                    exclude 'META-INF/notice.txt'
                    exclude 'META-INF/license.txt'
                    exclude 'META-INF/dependencies.txt'
                    exclude 'META-INF/LGPL2.1'
                }
            }
        } else {
            println "==== with no android property： ${project.name} ===="
        }

        if (project.plugins.hasPlugin('com.android.library')) {
            android {
                buildTypes {
                    release {
                        minifyEnabled true
                        consumerProguardFiles 'proguard-rules.pro'
                    }
                    debug {
                        minifyEnabled false
                        consumerProguardFiles 'proguard-rules.pro'
                    }
                }

            }
            if (project.name.contains('module')) {
                println "==== add arguments： ${project.name} ===="
                android {
                    defaultConfig {
                        javaCompileOptions {
                            annotationProcessorOptions {
                                arguments = ['MODULE_NAME': project.getName()]
                            }
                        }
                    }
                }
            }
        } else if (project.plugins.hasPlugin('com.android.application')) {
            android {
                buildTypes {
                    debug {
                        shrinkResources false
                        minifyEnabled false
                        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                    }

                    release {
                        zipAlignEnabled true
                        shrinkResources true
                        minifyEnabled true
                        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                    }
                }

                dexOptions {
                    javaMaxHeapSize "4g"
                    jumboMode = true
                }
            }
        }
    }

}